#!/usr/bin/env ruby
require 'couth_ai'
require 'highline'
require 'pp'

cli = HighLine.new

# yahoo client
yahoo_consumer_key = ENV["COUTH_AI_YAHOO_KEY"] || cli.ask("Yahoo consumer key: ")
yahoo_consumer_secret = ENV["COUTH_AI_YAHOO_SECRET"] || cli.ask("Yahoo consumer secret: ") { |q| q.echo = false }
yahoo_session_filename = ENV["COUTH_AI_YAHOO_SESSION"] || "/tmp/couth_ai/yahoo.json"
yahoo = CouthAI::Yahoo::Client.new(yahoo_consumer_key, yahoo_consumer_secret, yahoo_session_filename)

# nerd client
nerd_key = ENV["COUTH_AI_NERD_KEY"] || cli.ask("Nerd key: ")
nerd_cache = ENV["COUTH_AI_NERD_CACHE"] || "/tmp/couth_ai/nerd"
nerd = CouthAI::Nerd::Client.new(nerd_key, nerd_cache)

# manager
league_id = ENV["COUTH_AI_LEAGUE_ID"] || cli.ask("League id: ")
manager = CouthAI::Manager.new(yahoo, nerd, league_id)

begin
  puts "Before optimizing:"
  manager.roster.players.each do |player|
    puts "#{player.name["full"]}, #{player.selected_position["position"]}"
  end
  puts "After optimizing:"
  response = manager.optimize_roster!
  manager.roster.players.each do |player|
    puts "#{player.name["full"]}, #{player.selected_position["position"]}: #{player.projected_points}"
  end
  pp response
rescue CouthAI::Yahoo::Client::AppTokenRequired
  app_token = cli.ask("Yahoo token (leave blank if unknown): ")
  if app_token.empty?
    puts "Visit the following URL for the Yahoo token:"
    puts yahoo.authorize_url
    app_token = cli.ask("Yahoo token: ")
  end
  yahoo.app_token = app_token
  retry
end
